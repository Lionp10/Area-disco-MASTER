@model webAreaMaster.Models.ViewModels.BarrasViewModel
@{
    ViewBag.Title = "Cargar";
}

@if (TempData["Message"] != null)
{
    <div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">¡Listo!</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <!-- Contenido de la ventana modal -->
                    <p><span style="font-size: 18px; color:greenyellow;"><i class="fa-regular fa-circle-check"></i></span> @TempData["Message"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("Cargar", "Barra", FormMethod.Post))
{
    <div class="row">
        <div class="col mb-3">
            <div class="card mt-3">
                <div class="card-header">
                    <h3>Cargar barras</h3>
                </div>
                <div class="card-body">
                    @Html.AntiForgeryToken()
                    <div class="row g-3">

                        <!-- selBarras -->
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.selBarra, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-ruler-horizontal"></i></span>
                                @Html.DropDownListFor(model => model.selBarra, Model.barrasList, "(Seleccionar barra)", new { @class = "form-control form-select" })
                            </div>
                            @Html.ValidationMessageFor(model => model.selBarra, "", new { @class = "text-danger" })
                        </div>

                        <!-- selStock -->
                        <div class="col-md-12">
                            <div class="row">

                                <!-- selFamilia -->
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.selFamilia, htmlAttributes: new { @class = "form-label" })
                                    <div class="input-group">
                                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-people-group"></i></span>
                                        @Html.DropDownListFor(model => model.selFamilia, Model.familiaList, "(Seleccionar familia)", new { @class = "form-control form-select" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.selFamilia, "", new { @class = "text-danger" })
                                </div>

                                <!-- selProducto -->
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.selProducto, htmlAttributes: new { @class = "form-label" })
                                    <div class="input-group">
                                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-wine-bottle"></i></span>
                                        @Html.DropDownListFor(model => model.selProducto, Model.productoList, "(Seleccionar producto)", new { @class = "form-control form-select", @disabled = "disabled", @id = "prodID", Text = "Seleccionar producto", Value = "0" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.selProducto, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>

                        <!-- Cantidad -->
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-arrow-trend-up"></i></span>
                                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
                                <span class="input-group-text" id="cantidad-disponible">Disponible:</span>
                            </div>
                            @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.cantidadDisponible, "", new { @class = "text-danger" })

                        </div>

                        @Html.HiddenFor(model => model.selProducto)
                        @Html.HiddenFor(model => model.cantidad)

                        <div class="col-12">
                            @Html.ActionLink("Volver", "Index", "Inicio", new { }, new { @class = "btn btn-secondary" })
                            <input id="btnCargar" type="submit" value="Cargar a la barra" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<hr />

<!-- Tabla listado stock barras -->
<div class="row">
    <div class="col mb-3">
        <div class="card mt-3">
            <div class="card-header">
                <h3>Stock barras</h3>
            </div>

            <!-- Filtrar stock por fechas -->
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-6">
                        <label for="fechaDesde">Fecha desde:</label>
                        <input type="date" id="fechaDesde" name="fechaDesde" class="form-control" />
                    </div>

                    <div class="col-md-6">
                        <label for="fechaHasta">Fecha hasta:</label>
                        <input type="date" id="fechaHasta" name="fechaHasta" class="form-control" />
                    </div>

                    <div class="col-md-12 mt-3">
                        <input class="btn btn-primary" type="button" id="btnBuscar" value="Filtrar" />
                        <input class="btn btn-primary" type="button" id="btnRecargar" value="Recargar tabla sin filtro" />
                    </div>
                </div>
            </div>

            <!-- Tabla -->
            <div class="card-body">
                <table id="tablaStockList" class="table table-hover table-bordered table-responsive-md"></table>
            </div>
        </div>
    </div>
</div>

@section scripts {


    <script type="text/javascript">
        $(document).ready(function () {

            // Ventana modal
            $('#infoModal').modal('show');
            $('.modal-header button').on('click', function () {
                $('#infoModal').modal('hide');
            });

            // Tabla
             var table =$('#tablaStockList').DataTable({
                "processing": true,
                "serverSide": true,
                "filter": true,
                "orderMulti": false,
                "responsive": true,
                "autoWidth": false,
                "pageLength": 10,
                "dom": "<'row'<'col-sm-6 col-xs-12'B><'col-sm-6 col-xs-12'f>><'row'<'col-12'rt>><'row'<'col-sm-6'i><'col-sm-6'p>>",

                "buttons": [
                    {
                        "extend": 'pageLength',
                        "className": 'btn btn-secondary',
                    },
                    {
                        "extend": 'excel',
                        "className": 'btn btn-secondary',
                        "text": '<i class="far fa-file-excel"></i> Excel',
                        "exportOptions": {
                            "columns": [0, 1, 2, 3, 4, 5]
                        }
                    },
                    {
                        "extend": 'pdfHtml5',
                        "download": 'open',
                        "className": 'btn btn-secondary',
                        "text": '<i class="far fa-file-pdf"></i> PDF',
                        "exportOptions": {
                            "columns": [0, 1, 2, 3, 4, 5]
                        },
                        customize: function (doc) {
                            doc.content[1].table.widths =
                                Array(doc.content[1].table.body[0].length + 1).join('*').split('');
                            doc.content[1].table.widths = ['5%', '25%', '20%', '15%', '15%', '20%'];

                        }
                    },
                ],

                "lengthMenu": [
                    [10, 25, 50, 100, 500, 1000],
                    ['10 filas', '25 filas', '50 filas', '100 filas', '500 filas', '1000 filas']
                ],

                "ajax": {
                    "url": "@Url.Action("ListarStockBarras", "Barra")",
                    "type": "POST",
                    "datatype": "json"
                },

                "language": {
                    "lengthMenu": "Mostrar _MENU_ filas",
                    "zeroRecords": "Ningún resultado encontrado",
                    "info": "Página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sin datos",
                    "search": "",
                    "searchPlaceholder": "Buscar... (#, familia, producto, cantidad, precio costo)",
                    "processing": "Procesando...",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": ">",
                        "previous": "<"
                    }
                },

                "columns": [
                    { "data": "stockID", "title": "#", "name": "stockID", "width": "5%", "classNmae": "text-center", "orderable": true },
                    { "data": "barras", "title": "Barra", "name": "familia", "width": "25%", "classNmae": "text-center", "orderable": true },
                    { "data": "familia", "title": "Familia", "name": "producto", "width": "20%", "classNmae": "text-center", "orderable": true },
                    { "data": "producto", "title": "Producto", "name": "cantidad", "width": "15%", "classNmae": "text-center", "orderable": true },
                    { "data": "cantidad", "title": "Cantidad", "name": "precioCostoUnidad", "width": "10%", "classNmae": "text-center", "orderable": true },
                    { "data": "precioVentaUnidad", "title": "Precio venta u.", "name": "precioVentaUnidad", "width": "10%", "classNmae": "text-center", "orderable": true },
                    {
                        "data": "fechaIngreso", "title": "Fecha de ingreso", "name": "fechaIngreso", "render": function (data) {
                            return moment(data).format('DD/MM/YYYY, HH:mm:ss a');
                        }, "width": "15%"
                    },
                ],
            });

            // Dropdownlists
            var selProducto = $("#prodID");
            $(selFamilia).change(function() {
                if ($(selFamilia).val() == "") {
                    $(selProducto).prop('disabled', true);
                    $(selProducto).append('<option value="" selected>(Seleccionar producto)</option>');
                } else {
                    $.ajax({
                        type: "post",
                        url: "/Deposito/ObtenerProductos",
                        data: { id: $(selFamilia).val() },
                        datatype: "json",
                        traditional: true,
                        success: function(data) {
                            $(selProducto).empty();
                            $(selProducto).prop('disabled', false);
                            $(selProducto).append("<option value='' selected>(Seleccionar producto)</option>");
                            $.each(data, function(index, row) {
                                $(selProducto).append($("<option></option>").val(row.Value).html(row.Text));
                            });
                        }
                    });
                }
            });

            $('#prodID').change(function () {
                var productId = $(this).val();
                $.ajax({
                    url: '@Url.Action("ObtenerCantidadDisponible", "Barra")',
                    data: { id: productId },
                    type: 'GET',
                    success: function (data) {
                        $('#cantidad-disponible').text('Disponible: ' + data);
                    },
                    error: function () {
                        alert('Ocurrió un error al obtener la cantidad disponible.');
                    }
                });
            });

            // Filtrado de fechas
            // Función para recargar la tabla
            function recargarTabla() {
                var fechaDesde = $('#fechaDesde').val();
                var fechaHasta = $('#fechaHasta').val();
                table.ajax.url("/Barra/ListarStockBarras?fechaDesde=" + fechaDesde + "&fechaHasta=" + fechaHasta).load();
            }
            // Ejecutar búsqueda al presionar botón Buscar
            $('#btnBuscar').on('click', function () {
                recargarTabla();
            });

            function recargarTablaSinFiltro() {
                $('#fechaDesde').val(null);
                $('#fechaHasta').val(null);
                table.ajax.url("/Barra/ListarStockBarras").load();
            }

            // Asignar el evento click al botón
            $('#btnRecargar').on('click', recargarTablaSinFiltro);

        });
    </script>
}
